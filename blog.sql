/*
Navicat MySQL Data Transfer

Source Server         : localhost
Source Server Version : 50520
Source Host           : localhost:3306
Source Database       : blog

Target Server Type    : MYSQL
Target Server Version : 50520
File Encoding         : 65001

Date: 2018-07-15 20:36:37
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for `article`
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article` (
  `id` varchar(64) NOT NULL,
  `author_id` int(11) DEFAULT NULL,
  `title` varchar(64) DEFAULT NULL,
  `createTime` datetime DEFAULT NULL,
  `content` text,
  `article_type_id` int(11) DEFAULT NULL,
  `keyword` varchar(255) DEFAULT NULL,
  `clickRate` int(64) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `author_id` (`author_id`),
  KEY `article_type_id` (`article_type_id`),
  CONSTRAINT `article_ibfk_1` FOREIGN KEY (`author_id`) REFERENCES `author` (`id`),
  CONSTRAINT `article_ibfk_2` FOREIGN KEY (`article_type_id`) REFERENCES `articletype` (`typeId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES ('0c6d9c6b-157e-464e-8ef4-b42ec188686d', '1', '演员的自我修养3', '2018-07-08 00:40:16', '<p>Hello, World!</p>', '1', '苑', '12');
INSERT INTO `article` VALUES ('0e3d14d0-2d2e-424c-937c-c664618fdc7f', '1', 'javabean', '2018-07-09 10:44:46', '<p>Hello, World!dsf</p>', '1', 'dsf', '3');
INSERT INTO `article` VALUES ('0e7dd4d5-3c2d-46cd-b11a-e3d4fa616972', '1', 'JAVA_String类', '2018-07-07 20:20:17', '<p>Hello, World!sdfgsdgdf</p>', '1', '不可变，toString', '4');
INSERT INTO `article` VALUES ('1a660c04-32f1-4356-83b6-7a92c435d1ca', '1', 'aaaa', '2018-07-09 10:44:06', '<p>Hello, World!fdf</p>', '1', 'aa', '5');
INSERT INTO `article` VALUES ('2a9e5b26-689e-4a7a-8777-63c83ef69a4e', '1', 'python', '2018-07-07 23:07:26', '<p>Hello, ! 爬虫</p>', '1', '爬虫', '5');
INSERT INTO `article` VALUES ('3892c3dd-08e3-4c62-b72d-510b51d7f6a5', '1', '挂科7门的优秀毕业生尴尬了谁？', '2018-07-10 16:28:05', '<p>挂科7门的优秀毕业生尴尬了谁</p>\r\n<p>■　李清</p>\r\n<p>近日，义乌工商学院（全名义乌工商职业技术学院）创业学院副院长庞海松因鼓励学生在校创业走红网络。高校招生季，这位副院长喊话高考生：&ldquo;创业3年当老板，让那些考得比你好的同学为你打工。&rdquo;他表示，在学生的创业路上，该校的政策非常给力&mdash;&mdash;政策推出之前，有一个学生因为创业，7门课不及格，到最后学校研究给他如期毕业，还推荐浙江省优秀毕业生。（7月8日浙江在线）</p>\r\n<p>义乌工商学院的逻辑很清楚，推荐7门课不及格的学生为省优秀毕业生，主要是因为这名学生创业很成功，&ldquo;在创业学院，我们认为学业好当然是好学生，但是他创业好，我们认为是更好的学生&rdquo;。</p>\r\n<p>然而在笔者看来，即便义乌工商学院创业学院主要目标是培养创业人才、企业家，因为一位学生创业好，哪怕7门课不及格也能推荐省优秀毕业生，这一做法也仍是有问题的。高校重视学生的实践能力当然值得支持，但高校毕竟是高校，有完整的课程教学与管理体系。&ldquo;优秀毕业生&rdquo;应当根据综合标准评出，不是某方面的单项奖。创业学院要适应市场需求没错，但市场标准与高教标准不能混为一谈。只要创业好挂科7门也能成优秀毕业生，那创业好不遵守校规与法律是否也能成优秀毕业生？&ldquo;一俊遮百丑&rdquo;，对其他学生来讲也是不公平的。</p>\r\n<p>毋庸置疑，我们的人才评价机制需要改革，高校的课程体系设置也要改革。对实践技能更重要的专业、院校，沿用传统的学业评价方式已不再合适。对义乌工商学院创业学院这样的院校，应允许它们在课程体系改革方面进行探索，步子可以迈得大一些。只是，&ldquo;没有规矩不成方圆&rdquo;，主要以实践能力来评价学生的学业，需要形成制度化的正式标准，不宜由院校或教师&ldquo;自由裁量&rdquo;。创业成绩可申请某些课程免修，跟修了课程不及格却被放过不是一回事。</p>\r\n<p>不妨再具体看看义乌工商学院的课程体系。如果一位学生7门课不及格，对其作为优秀毕业生无关紧要，是否说明学校的课程设置并不科学，这些课程完全可以取消？否则的话，继续设置那些学校认为意义不大、学生也无心认真去学的课程，既浪费师生精力，也会让高等教育体制尴尬。推荐挂科7门的学生为省优秀毕业生，上级管理部门是批准还是不批准呢？xxxx</p>', '5', '优秀、挂科', '3');
INSERT INTO `article` VALUES ('45c92d6a-4539-4e13-ba26-d91a4b622994', '1', '用原生JS写点击元素变色的多种方法', '2018-07-10 16:29:02', '<p>一组数组元素，点击其中某一个数组元素，被点击的那个元素就会变色或者放大，也就是样式有修改，这是我们经常用到的功能，我们经常实现这个功能用到的一般都是两个循环，第一个循环给每个元素绑定事件，第二个循环为所有元素样式变成默认。</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>var headCel =document.getElementById(\'headerBar\').children;\r\nfor(var i=0;i&lt;headCel.length;i++){\r\n   headCel[i].onclick = function(){\r\n     for (var j =0;j&lt;headCel.length;j++){\r\n       headCel[j].style.color = \'#000\';\r\n     }\r\n     this.style.color = \"#E5502E\";\r\n   }\r\n}</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>其实用原生JS实现这个功能还有一种更简单的方法：</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>//点击头部小导航条绑定事件\r\nvar headli = headUl.children;\r\nvar oldindex =0 ;\r\nfor (var k = 0; k &lt; headli.length; k++) {\r\n　　headli[k].index=k;\r\n//切换栏目时\r\n　　headli[k].onclick = function () {\r\n　　　　headli[oldindex].style.color = \'#212121\';\r\n　　　　this.style.color = \"#E5502E\";\r\n　　　　oldindex=this.index;\r\n　　}\r\n}</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p>定义一个oldindex，为刚刚点击元素的Index，初始值为默认选择的index，一般为0，在每次不同元素点击后，将该被点击元素的Index赋值给定义的oldindex，在发生下一次点击事件的时候，就让上一次被点的元素elArr[oldindex]的样式恢复到原样，这次被点击的元素更改样式。ghgfh</p>', '1', 'JS、元素变色', '26');
INSERT INTO `article` VALUES ('4a069311-ad82-4994-bb5d-f9eb52789788', '1', 'AES加密解密算法（前端后端互通）', '2018-07-10 16:20:40', '<p>一、适用范围：</p>\r\n<p>1，前端加密，前端解密</p>\r\n<p>2，前端加密，后端解密</p>\r\n<p>3，前端解密，后端加密</p>\r\n<p>4，后端解密，后端加密</p>\r\n<p>二、后端加密解密实现</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>package com.test;\r\n\r\nimport javax.crypto.Cipher;\r\nimport javax.crypto.spec.SecretKeySpec;\r\n\r\nimport org.apache.commons.codec.binary.Base64;\r\nimport org.apache.log4j.Logger;\r\n\r\n/*****************************************************\r\n * AES加密解密工具\r\n ****************************************************/\r\n\r\npublic class AesUtil {\r\n    \r\n    private static final Logger logger = Logger.getLogger(AesUtil.class); //log日志\r\n    \r\n    private static final String ALGORITHM = \"AES/ECB/PKCS5Padding\";    //\"算法/模式/补码方式\"  \r\n    \r\n    /*****************************************************\r\n     * AES加密\r\n     * @param content 加密内容\r\n     * @param key 加密密码，由字母或数字组成\r\n                此方法使用AES-128-ECB加密模式，key需要为16位\r\n                加密解密key必须相同，如：abcd1234abcd1234\r\n     * @return 加密密文\r\n     ****************************************************/\r\n    \r\n    public static String enCode(String content, String key) {\r\n        if (key == null || \"\".equals(key)) {\r\n            logger.info(\"key为空！\");\r\n            return null;\r\n        }\r\n        if (key.length() != 16) {\r\n            logger.info(\"key长度不是16位！\");\r\n            return null;\r\n        }\r\n        try {\r\n            byte[] raw = key.getBytes();  //获得密码的字节数组\r\n            SecretKeySpec skey = new SecretKeySpec(raw, \"AES\"); //根据密码生成AES密钥\r\n            Cipher cipher = Cipher.getInstance(ALGORITHM);  //根据指定算法ALGORITHM自成密码器\r\n            cipher.init(Cipher.ENCRYPT_MODE, skey); //初始化密码器，第一个参数为加密(ENCRYPT_MODE)或者解密(DECRYPT_MODE)操作，第二个参数为生成的AES密钥\r\n            byte [] byte_content = content.getBytes(\"utf-8\"); //获取加密内容的字节数组(设置为utf-8)不然内容中如果有中文和英文混合中文就会解密为乱码            \r\n            byte [] encode_content = cipher.doFinal(byte_content); //密码器加密数据\r\n            return Base64.encodeBase64String(encode_content); //将加密后的数据转换为字符串返回\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }  \r\n    }\r\n\r\n    /*****************************************************\r\n     * AES解密\r\n     * @param content 加密密文\r\n     * @param key 加密密码,由字母或数字组成\r\n                此方法使用AES-128-ECB加密模式，key需要为16位\r\n                加密解密key必须相同\r\n     * @return 解密明文\r\n     ****************************************************/\r\n    \r\n    public static String deCode(String content, String key) {\r\n        if (key == null || \"\".equals(key)) {\r\n            logger.info(\"key为空！\");\r\n            return null;\r\n        }\r\n        if (key.length() != 16) {\r\n            logger.info(\"key长度不是16位！\");\r\n            return null;\r\n        }\r\n        try {\r\n            byte[] raw = key.getBytes();  //获得密码的字节数组\r\n            SecretKeySpec skey = new SecretKeySpec(raw, \"AES\"); //根据密码生成AES密钥\r\n            Cipher cipher = Cipher.getInstance(ALGORITHM);  //根据指定算法ALGORITHM自成密码器\r\n            cipher.init(Cipher.DECRYPT_MODE, skey); //初始化密码器，第一个参数为加密(ENCRYPT_MODE)或者解密(DECRYPT_MODE)操作，第二个参数为生成的AES密钥    \r\n            byte [] encode_content = Base64.decodeBase64(content); //把密文字符串转回密文字节数组\r\n            byte [] byte_content = cipher.doFinal(encode_content); //密码器解密数据\r\n            return new String(byte_content,\"utf-8\"); //将解密后的数据转换为字符串返回\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n            return null;\r\n        }  \r\n    }\r\n    \r\n    /*****************************************************\r\n     * AES加密解密测试\r\n     * @param args\r\n     * @return \r\n     ****************************************************/\r\n    \r\n    public static void main(String[] args) {\r\n        String content = \"加密解密测试\";\r\n        logger.info(\"加密content：\"+content);\r\n        String key = \"abcd1234abcd1234\";\r\n        logger.info(\"加密key：\"+key);\r\n        String enResult = enCode(content, key);\r\n        logger.info(\"加密result：\"+enResult);\r\n        String deResult = deCode(enResult, key);\r\n        logger.info(\"解密result：\"+deResult);\r\n    }\r\n}</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p>三、前端加密解密实现</p>\r\n<p>1，加密解密方法放在自己写的my-aes-crypto.js文件里，如下：</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>function encrypt(content, key){\r\n    var sKey = CryptoJS.enc.Utf8.parse(key);\r\n    var sContent = CryptoJS.enc.Utf8.parse(content);\r\n    var encrypted = CryptoJS.AES.encrypt(sContent, sKey, {mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7});\r\n    return encrypted.toString();\r\n}\r\n\r\nfunction decrypt(content, key){\r\n    var sKey = CryptoJS.enc.Utf8.parse(key);\r\n    var decrypt = CryptoJS.AES.decrypt(content, sKey, {mode:CryptoJS.mode.ECB,padding: CryptoJS.pad.Pkcs7});\r\n    return CryptoJS.enc.Utf8.stringify(decrypt).toString();\r\n}</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p>2，上面的方法需要依赖aes.js，代码如下：</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>!function(t,n){\"object\"==typeof exports?module.exports=exports=n():\"function\"==typeof define&amp;&amp;define.amd?define([],n):t.CryptoJS=n()}(this,function(){var t=t||function(t,n){var i=Object.create||function(){function t(){}return function(n){var i;return t.prototype=n,i=new t,t.prototype=null,i}}(),e={},r=e.lib={},o=r.Base=function(){return{extend:function(t){var n=i(this);return t&amp;&amp;n.mixIn(t),n.hasOwnProperty(\"init\")&amp;&amp;this.init!==n.init||(n.init=function(){n.$super.init.apply(this,arguments)}),n.init.prototype=n,n.$super=this,n},create:function(){var t=this.extend();return t.init.apply(t,arguments),t},init:function(){},mixIn:function(t){for(var n in t)t.hasOwnProperty(n)&amp;&amp;(this[n]=t[n]);t.hasOwnProperty(\"toString\")&amp;&amp;(this.toString=t.toString)},clone:function(){return this.init.prototype.extend(this)}}}(),s=r.WordArray=o.extend({init:function(t,i){t=this.words=t||[],i!=n?this.sigBytes=i:this.sigBytes=4*t.length},toString:function(t){return(t||c).stringify(this)},concat:function(t){var n=this.words,i=t.words,e=this.sigBytes,r=t.sigBytes;if(this.clamp(),e%4)for(var o=0;o&lt;r;o++){var s=i[o&gt;&gt;&gt;2]&gt;&gt;&gt;24-o%4*8&amp;255;n[e+o&gt;&gt;&gt;2]|=s&lt;&lt;24-(e+o)%4*8}else for(var o=0;o&lt;r;o+=4)n[e+o&gt;&gt;&gt;2]=i[o&gt;&gt;&gt;2];return this.sigBytes+=r,this},clamp:function(){var n=this.words,i=this.sigBytes;n[i&gt;&gt;&gt;2]&amp;=4294967295&lt;&lt;32-i%4*8,n.length=t.ceil(i/4)},clone:function(){var t=o.clone.call(this);return t.words=this.words.slice(0),t},random:function(n){for(var i,e=[],r=function(n){var n=n,i=987654321,e=4294967295;return function(){i=36969*(65535&amp;i)+(i&gt;&gt;16)&amp;e,n=18e3*(65535&amp;n)+(n&gt;&gt;16)&amp;e;var r=(i&lt;&lt;16)+n&amp;e;return r/=4294967296,r+=.5,r*(t.random()&gt;.5?1:-1)}},o=0;o&lt;n;o+=4){var a=r(4294967296*(i||t.random()));i=987654071*a(),e.push(4294967296*a()|0)}return new s.init(e,n)}}),a=e.enc={},c=a.Hex={stringify:function(t){for(var n=t.words,i=t.sigBytes,e=[],r=0;r&lt;i;r++){var o=n[r&gt;&gt;&gt;2]&gt;&gt;&gt;24-r%4*8&amp;255;e.push((o&gt;&gt;&gt;4).toString(16)),e.push((15&amp;o).toString(16))}return e.join(\"\")},parse:function(t){for(var n=t.length,i=[],e=0;e&lt;n;e+=2)i[e&gt;&gt;&gt;3]|=parseInt(t.substr(e,2),16)&lt;&lt;24-e%8*4;return new s.init(i,n/2)}},u=a.Latin1={stringify:function(t){for(var n=t.words,i=t.sigBytes,e=[],r=0;r&lt;i;r++){var o=n[r&gt;&gt;&gt;2]&gt;&gt;&gt;24-r%4*8&amp;255;e.push(String.fromCharCode(o))}return e.join(\"\")},parse:function(t){for(var n=t.length,i=[],e=0;e&lt;n;e++)i[e&gt;&gt;&gt;2]|=(255&amp;t.charCodeAt(e))&lt;&lt;24-e%4*8;return new s.init(i,n)}},f=a.Utf8={stringify:function(t){try{return decodeURIComponent(escape(u.stringify(t)))}catch(t){throw new Error(\"Malformed UTF-8 data\")}},parse:function(t){return u.parse(unescape(encodeURIComponent(t)))}},h=r.BufferedBlockAlgorithm=o.extend({reset:function(){this._data=new s.init,this._nDataBytes=0},_append:function(t){\"string\"==typeof t&amp;&amp;(t=f.parse(t)),this._data.concat(t),this._nDataBytes+=t.sigBytes},_process:function(n){var i=this._data,e=i.words,r=i.sigBytes,o=this.blockSize,a=4*o,c=r/a;c=n?t.ceil(c):t.max((0|c)-this._minBufferSize,0);var u=c*o,f=t.min(4*u,r);if(u){for(var h=0;h&lt;u;h+=o)this._doProcessBlock(e,h);var p=e.splice(0,u);i.sigBytes-=f}return new s.init(p,f)},clone:function(){var t=o.clone.call(this);return t._data=this._data.clone(),t},_minBufferSize:0}),p=(r.Hasher=h.extend({cfg:o.extend(),init:function(t){this.cfg=this.cfg.extend(t),this.reset()},reset:function(){h.reset.call(this),this._doReset()},update:function(t){return this._append(t),this._process(),this},finalize:function(t){t&amp;&amp;this._append(t);var n=this._doFinalize();return n},blockSize:16,_createHelper:function(t){return function(n,i){return new t.init(i).finalize(n)}},_createHmacHelper:function(t){return function(n,i){return new p.HMAC.init(t,i).finalize(n)}}}),e.algo={});return e}(Math);return t});\r\n//# sourceMappingURL=core.min.js.map\r\n!function(e,t,i){\"object\"==typeof exports?module.exports=exports=t(require(\"./core.min\"),require(\"./sha1.min\"),require(\"./hmac.min\")):\"function\"==typeof define&amp;&amp;define.amd?define([\"./core.min\",\"./sha1.min\",\"./hmac.min\"],t):t(e.CryptoJS)}(this,function(e){return function(){var t=e,i=t.lib,r=i.Base,n=i.WordArray,o=t.algo,a=o.MD5,c=o.EvpKDF=r.extend({cfg:r.extend({keySize:4,hasher:a,iterations:1}),init:function(e){this.cfg=this.cfg.extend(e)},compute:function(e,t){for(var i=this.cfg,r=i.hasher.create(),o=n.create(),a=o.words,c=i.keySize,f=i.iterations;a.length&lt;c;){s&amp;&amp;r.update(s);var s=r.update(e).finalize(t);r.reset();for(var u=1;u&lt;f;u++)s=r.finalize(s),r.reset();o.concat(s)}return o.sigBytes=4*c,o}});t.EvpKDF=function(e,t,i){return c.create(i).compute(e,t)}}(),e.EvpKDF});\r\n//# sourceMappingURL=evpkdf.min.js.map\r\n!function(r,e){\"object\"==typeof exports?module.exports=exports=e(require(\"./core.min\")):\"function\"==typeof define&amp;&amp;define.amd?define([\"./core.min\"],e):e(r.CryptoJS)}(this,function(r){return function(){function e(r,e,t){for(var n=[],i=0,o=0;o&lt;e;o++)if(o%4){var f=t[r.charCodeAt(o-1)]&lt;&lt;o%4*2,c=t[r.charCodeAt(o)]&gt;&gt;&gt;6-o%4*2;n[i&gt;&gt;&gt;2]|=(f|c)&lt;&lt;24-i%4*8,i++}return a.create(n,i)}var t=r,n=t.lib,a=n.WordArray,i=t.enc;i.Base64={stringify:function(r){var e=r.words,t=r.sigBytes,n=this._map;r.clamp();for(var a=[],i=0;i&lt;t;i+=3)for(var o=e[i&gt;&gt;&gt;2]&gt;&gt;&gt;24-i%4*8&amp;255,f=e[i+1&gt;&gt;&gt;2]&gt;&gt;&gt;24-(i+1)%4*8&amp;255,c=e[i+2&gt;&gt;&gt;2]&gt;&gt;&gt;24-(i+2)%4*8&amp;255,s=o&lt;&lt;16|f&lt;&lt;8|c,h=0;h&lt;4&amp;&amp;i+.75*h&lt;t;h++)a.push(n.charAt(s&gt;&gt;&gt;6*(3-h)&amp;63));var p=n.charAt(64);if(p)for(;a.length%4;)a.push(p);return a.join(\"\")},parse:function(r){var t=r.length,n=this._map,a=this._reverseMap;if(!a){a=this._reverseMap=[];for(var i=0;i&lt;n.length;i++)a[n.charCodeAt(i)]=i}var o=n.charAt(64);if(o){var f=r.indexOf(o);f!==-1&amp;&amp;(t=f)}return e(r,t,a)},_map:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\"}}(),r.enc.Base64});\r\n//# sourceMappingURL=enc-base64.min.js.map\r\n!function(e,t,r){\"object\"==typeof exports?module.exports=exports=t(require(\"./core.min\"),require(\"./evpkdf.min\")):\"function\"==typeof define&amp;&amp;define.amd?define([\"./core.min\",\"./evpkdf.min\"],t):t(e.CryptoJS)}(this,function(e){e.lib.Cipher||function(t){var r=e,i=r.lib,n=i.Base,c=i.WordArray,o=i.BufferedBlockAlgorithm,s=r.enc,a=(s.Utf8,s.Base64),f=r.algo,p=f.EvpKDF,d=i.Cipher=o.extend({cfg:n.extend(),createEncryptor:function(e,t){return this.create(this._ENC_XFORM_MODE,e,t)},createDecryptor:function(e,t){return this.create(this._DEC_XFORM_MODE,e,t)},init:function(e,t,r){this.cfg=this.cfg.extend(r),this._xformMode=e,this._key=t,this.reset()},reset:function(){o.reset.call(this),this._doReset()},process:function(e){return this._append(e),this._process()},finalize:function(e){e&amp;&amp;this._append(e);var t=this._doFinalize();return t},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function e(e){return\"string\"==typeof e?B:x}return function(t){return{encrypt:function(r,i,n){return e(i).encrypt(t,r,i,n)},decrypt:function(r,i,n){return e(i).decrypt(t,r,i,n)}}}}()}),h=(i.StreamCipher=d.extend({_doFinalize:function(){var e=this._process(!0);return e},blockSize:1}),r.mode={}),u=i.BlockCipherMode=n.extend({createEncryptor:function(e,t){return this.Encryptor.create(e,t)},createDecryptor:function(e,t){return this.Decryptor.create(e,t)},init:function(e,t){this._cipher=e,this._iv=t}}),l=h.CBC=function(){function e(e,r,i){var n=this._iv;if(n){var c=n;this._iv=t}else var c=this._prevBlock;for(var o=0;o&lt;i;o++)e[r+o]^=c[o]}var r=u.extend();return r.Encryptor=r.extend({processBlock:function(t,r){var i=this._cipher,n=i.blockSize;e.call(this,t,r,n),i.encryptBlock(t,r),this._prevBlock=t.slice(r,r+n)}}),r.Decryptor=r.extend({processBlock:function(t,r){var i=this._cipher,n=i.blockSize,c=t.slice(r,r+n);i.decryptBlock(t,r),e.call(this,t,r,n),this._prevBlock=c}}),r}(),_=r.pad={},v=_.Pkcs7={pad:function(e,t){for(var r=4*t,i=r-e.sigBytes%r,n=i&lt;&lt;24|i&lt;&lt;16|i&lt;&lt;8|i,o=[],s=0;s&lt;i;s+=4)o.push(n);var a=c.create(o,i);e.concat(a)},unpad:function(e){var t=255&amp;e.words[e.sigBytes-1&gt;&gt;&gt;2];e.sigBytes-=t}},y=(i.BlockCipher=d.extend({cfg:d.cfg.extend({mode:l,padding:v}),reset:function(){d.reset.call(this);var e=this.cfg,t=e.iv,r=e.mode;if(this._xformMode==this._ENC_XFORM_MODE)var i=r.createEncryptor;else{var i=r.createDecryptor;this._minBufferSize=1}this._mode&amp;&amp;this._mode.__creator==i?this._mode.init(this,t&amp;&amp;t.words):(this._mode=i.call(r,this,t&amp;&amp;t.words),this._mode.__creator=i)},_doProcessBlock:function(e,t){this._mode.processBlock(e,t)},_doFinalize:function(){var e=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE){e.pad(this._data,this.blockSize);var t=this._process(!0)}else{var t=this._process(!0);e.unpad(t)}return t},blockSize:4}),i.CipherParams=n.extend({init:function(e){this.mixIn(e)},toString:function(e){return(e||this.formatter).stringify(this)}})),m=r.format={},k=m.OpenSSL={stringify:function(e){var t=e.ciphertext,r=e.salt;if(r)var i=c.create([1398893684,1701076831]).concat(r).concat(t);else var i=t;return i.toString(a)},parse:function(e){var t=a.parse(e),r=t.words;if(1398893684==r[0]&amp;&amp;1701076831==r[1]){var i=c.create(r.slice(2,4));r.splice(0,4),t.sigBytes-=16}return y.create({ciphertext:t,salt:i})}},x=i.SerializableCipher=n.extend({cfg:n.extend({format:k}),encrypt:function(e,t,r,i){i=this.cfg.extend(i);var n=e.createEncryptor(r,i),c=n.finalize(t),o=n.cfg;return y.create({ciphertext:c,key:r,iv:o.iv,algorithm:e,mode:o.mode,padding:o.padding,blockSize:e.blockSize,formatter:i.format})},decrypt:function(e,t,r,i){i=this.cfg.extend(i),t=this._parse(t,i.format);var n=e.createDecryptor(r,i).finalize(t.ciphertext);return n},_parse:function(e,t){return\"string\"==typeof e?t.parse(e,this):e}}),g=r.kdf={},S=g.OpenSSL={execute:function(e,t,r,i){i||(i=c.random(8));var n=p.create({keySize:t+r}).compute(e,i),o=c.create(n.words.slice(t),4*r);return n.sigBytes=4*t,y.create({key:n,iv:o,salt:i})}},B=i.PasswordBasedCipher=x.extend({cfg:x.cfg.extend({kdf:S}),encrypt:function(e,t,r,i){i=this.cfg.extend(i);var n=i.kdf.execute(r,e.keySize,e.ivSize);i.iv=n.iv;var c=x.encrypt.call(this,e,t,n.key,i);return c.mixIn(n),c},decrypt:function(e,t,r,i){i=this.cfg.extend(i),t=this._parse(t,i.format);var n=i.kdf.execute(r,e.keySize,e.ivSize,t.salt);i.iv=n.iv;var c=x.decrypt.call(this,e,t,n.key,i);return c}})}()});\r\n//# sourceMappingURL=cipher-core.min.js.map\r\n!function(e,i){\"object\"==typeof exports?module.exports=exports=i(require(\"./core.min\")):\"function\"==typeof define&amp;&amp;define.amd?define([\"./core.min\"],i):i(e.CryptoJS)}(this,function(e){!function(){var i=e,t=i.lib,n=t.Base,s=i.enc,r=s.Utf8,o=i.algo;o.HMAC=n.extend({init:function(e,i){e=this._hasher=new e.init,\"string\"==typeof i&amp;&amp;(i=r.parse(i));var t=e.blockSize,n=4*t;i.sigBytes&gt;n&amp;&amp;(i=e.finalize(i)),i.clamp();for(var s=this._oKey=i.clone(),o=this._iKey=i.clone(),a=s.words,f=o.words,c=0;c&lt;t;c++)a[c]^=1549556828,f[c]^=909522486;s.sigBytes=o.sigBytes=n,this.reset()},reset:function(){var e=this._hasher;e.reset(),e.update(this._iKey)},update:function(e){return this._hasher.update(e),this},finalize:function(e){var i=this._hasher,t=i.finalize(e);i.reset();var n=i.finalize(this._oKey.clone().concat(t));return n}})}()});\r\n//# sourceMappingURL=hmac.min.js.map\r\n!function(e,o,r){\"object\"==typeof exports?module.exports=exports=o(require(\"./core.min\"),require(\"./cipher-core.min\")):\"function\"==typeof define&amp;&amp;define.amd?define([\"./core.min\",\"./cipher-core.min\"],o):o(e.CryptoJS)}(this,function(e){return e.mode.ECB=function(){var o=e.lib.BlockCipherMode.extend();return o.Encryptor=o.extend({processBlock:function(e,o){this._cipher.encryptBlock(e,o)}}),o.Decryptor=o.extend({processBlock:function(e,o){this._cipher.decryptBlock(e,o)}}),o}(),e.mode.ECB});\r\n//# sourceMappingURL=mode-ecb.min.js.map\r\n!function(e,r,i){\"object\"==typeof exports?module.exports=exports=r(require(\"./core.min\"),require(\"./cipher-core.min\")):\"function\"==typeof define&amp;&amp;define.amd?define([\"./core.min\",\"./cipher-core.min\"],r):r(e.CryptoJS)}(this,function(e){return e.pad.Pkcs7});\r\n//# sourceMappingURL=pad-pkcs7.min.js.map\r\n!function(e,r,i){\"object\"==typeof exports?module.exports=exports=r(require(\"./core.min\"),require(\"./enc-base64.min\"),require(\"./md5.min\"),require(\"./evpkdf.min\"),require(\"./cipher-core.min\")):\"function\"==typeof define&amp;&amp;define.amd?define([\"./core.min\",\"./enc-base64.min\",\"./md5.min\",\"./evpkdf.min\",\"./cipher-core.min\"],r):r(e.CryptoJS)}(this,function(e){return function(){var r=e,i=r.lib,n=i.BlockCipher,o=r.algo,t=[],c=[],s=[],f=[],a=[],d=[],u=[],v=[],h=[],y=[];!function(){for(var e=[],r=0;r&lt;256;r++)r&lt;128?e[r]=r&lt;&lt;1:e[r]=r&lt;&lt;1^283;for(var i=0,n=0,r=0;r&lt;256;r++){var o=n^n&lt;&lt;1^n&lt;&lt;2^n&lt;&lt;3^n&lt;&lt;4;o=o&gt;&gt;&gt;8^255&amp;o^99,t[i]=o,c[o]=i;var p=e[i],l=e[p],_=e[l],k=257*e[o]^16843008*o;s[i]=k&lt;&lt;24|k&gt;&gt;&gt;8,f[i]=k&lt;&lt;16|k&gt;&gt;&gt;16,a[i]=k&lt;&lt;8|k&gt;&gt;&gt;24,d[i]=k;var k=16843009*_^65537*l^257*p^16843008*i;u[o]=k&lt;&lt;24|k&gt;&gt;&gt;8,v[o]=k&lt;&lt;16|k&gt;&gt;&gt;16,h[o]=k&lt;&lt;8|k&gt;&gt;&gt;24,y[o]=k,i?(i=p^e[e[e[_^p]]],n^=e[e[n]]):i=n=1}}();var p=[0,1,2,4,8,16,32,64,128,27,54],l=o.AES=n.extend({_doReset:function(){if(!this._nRounds||this._keyPriorReset!==this._key){for(var e=this._keyPriorReset=this._key,r=e.words,i=e.sigBytes/4,n=this._nRounds=i+6,o=4*(n+1),c=this._keySchedule=[],s=0;s&lt;o;s++)if(s&lt;i)c[s]=r[s];else{var f=c[s-1];s%i?i&gt;6&amp;&amp;s%i==4&amp;&amp;(f=t[f&gt;&gt;&gt;24]&lt;&lt;24|t[f&gt;&gt;&gt;16&amp;255]&lt;&lt;16|t[f&gt;&gt;&gt;8&amp;255]&lt;&lt;8|t[255&amp;f]):(f=f&lt;&lt;8|f&gt;&gt;&gt;24,f=t[f&gt;&gt;&gt;24]&lt;&lt;24|t[f&gt;&gt;&gt;16&amp;255]&lt;&lt;16|t[f&gt;&gt;&gt;8&amp;255]&lt;&lt;8|t[255&amp;f],f^=p[s/i|0]&lt;&lt;24),c[s]=c[s-i]^f}for(var a=this._invKeySchedule=[],d=0;d&lt;o;d++){var s=o-d;if(d%4)var f=c[s];else var f=c[s-4];d&lt;4||s&lt;=4?a[d]=f:a[d]=u[t[f&gt;&gt;&gt;24]]^v[t[f&gt;&gt;&gt;16&amp;255]]^h[t[f&gt;&gt;&gt;8&amp;255]]^y[t[255&amp;f]]}}},encryptBlock:function(e,r){this._doCryptBlock(e,r,this._keySchedule,s,f,a,d,t)},decryptBlock:function(e,r){var i=e[r+1];e[r+1]=e[r+3],e[r+3]=i,this._doCryptBlock(e,r,this._invKeySchedule,u,v,h,y,c);var i=e[r+1];e[r+1]=e[r+3],e[r+3]=i},_doCryptBlock:function(e,r,i,n,o,t,c,s){for(var f=this._nRounds,a=e[r]^i[0],d=e[r+1]^i[1],u=e[r+2]^i[2],v=e[r+3]^i[3],h=4,y=1;y&lt;f;y++){var p=n[a&gt;&gt;&gt;24]^o[d&gt;&gt;&gt;16&amp;255]^t[u&gt;&gt;&gt;8&amp;255]^c[255&amp;v]^i[h++],l=n[d&gt;&gt;&gt;24]^o[u&gt;&gt;&gt;16&amp;255]^t[v&gt;&gt;&gt;8&amp;255]^c[255&amp;a]^i[h++],_=n[u&gt;&gt;&gt;24]^o[v&gt;&gt;&gt;16&amp;255]^t[a&gt;&gt;&gt;8&amp;255]^c[255&amp;d]^i[h++],k=n[v&gt;&gt;&gt;24]^o[a&gt;&gt;&gt;16&amp;255]^t[d&gt;&gt;&gt;8&amp;255]^c[255&amp;u]^i[h++];a=p,d=l,u=_,v=k}var p=(s[a&gt;&gt;&gt;24]&lt;&lt;24|s[d&gt;&gt;&gt;16&amp;255]&lt;&lt;16|s[u&gt;&gt;&gt;8&amp;255]&lt;&lt;8|s[255&amp;v])^i[h++],l=(s[d&gt;&gt;&gt;24]&lt;&lt;24|s[u&gt;&gt;&gt;16&amp;255]&lt;&lt;16|s[v&gt;&gt;&gt;8&amp;255]&lt;&lt;8|s[255&amp;a])^i[h++],_=(s[u&gt;&gt;&gt;24]&lt;&lt;24|s[v&gt;&gt;&gt;16&amp;255]&lt;&lt;16|s[a&gt;&gt;&gt;8&amp;255]&lt;&lt;8|s[255&amp;d])^i[h++],k=(s[v&gt;&gt;&gt;24]&lt;&lt;24|s[a&gt;&gt;&gt;16&amp;255]&lt;&lt;16|s[d&gt;&gt;&gt;8&amp;255]&lt;&lt;8|s[255&amp;u])^i[h++];e[r]=p,e[r+1]=l,e[r+2]=_,e[r+3]=k},keySize:8});r.AES=n._createHelper(l)}(),e.AES});\r\n//# sourceMappingURL=aes.min.js.map\r\n!function(e,n){\"object\"==typeof exports?module.exports=exports=n(require(\"./core.min\")):\"function\"==typeof define&amp;&amp;define.amd?define([\"./core.min\"],n):n(e.CryptoJS)}(this,function(e){return e.enc.Utf8});\r\n//# sourceMappingURL=enc-utf8.min.js.map</pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p>3，在jsp里使用方法如下：</p>\r\n<div class=\"cnblogs_code\">\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n<pre>&lt;%@ page language=\"java\" contentType=\"text/html; charset=utf-8\"\r\n    pageEncoding=\"utf-8\"%&gt;\r\n\r\n    \r\n \r\n  \r\n\r\n<textarea id=\"textareaid1\" cols=\"50\" rows=\"10\">在这里输入内容...</textarea><br /><input type=\"button\" value=\"加密\" /><br /><textarea id=\"textareaid2\" cols=\"50\" rows=\"10\">在这里显示内容...</textarea><br /><input type=\"button\" value=\"解密\" /><br /><textarea id=\"textareaid3\" cols=\"50\" rows=\"10\">在这里显示内容...</textarea></pre>\r\n<div class=\"cnblogs_code_toolbar\"><span class=\"cnblogs_code_copy\"><a title=\"复制代码\"><img src=\"https://common.cnblogs.com/images/copycode.gif\" alt=\"复制代码\" /></a></span></div>\r\n</div>\r\n<p>注：此方法为AES，128位，ECB模式加密解密。</p>\r\n<p>　　前后端只要保持key相同，可以相互加密解密。2222222222222</p>', '1', 'AES、加密、算法', '5');
INSERT INTO `article` VALUES ('4a1a6fa9-3fff-4ae2-a6b5-7c9a0f50c41a', '1', 'linux各种终端类型的区别和概念', '2018-07-10 10:59:56', '<p>1 pty(虚拟终端或伪终端):</p>\r\n<p>当我们远程telnet到主机或使用xterm时不也需要一个终端交互么？是的，这就是虚拟终端pty(pseudo-tty)。</p>\r\n<p>2 tty(终端设备的统称):<br />tty一词源于Teletypes，或者teletypewriters，原来指的是电传打字机，是通过串行线用打印机键盘通过阅读和发送信息的东西，后来这东西被键盘与显示器取代，所以现在叫终端比较合适。&nbsp;<br />终端是一种字符型设备，它有多种类型，通常使用tty来简称各种类型的终端设备。</p>\r\n<p>3 pts/ptmx(pts/ptmx结合使用，进而实现pty):<br />pts(pseudo-terminal slave)是pty的实现方法，与ptmx(pseudo-terminal master)配合使用实现pty。</p>\r\n<p>&nbsp;</p>\r\n<p>Linux终端：</p>\r\n<p><em id=\"__mceDel\">在Linux系统的设备特殊文件目录/dev/下，终端特殊设备文件一般有以下几种：</em></p>\r\n<p>1、串行端口终端(/dev/ttySn)<br />串行端口终端(Serial Port Terminal)是使用计算机串行端口连接的终端设备。计算机把每个串行端口都看作是一个字符设备。<br />有段时间这些串行端口设备通常被称为终端设备，因为那时它的最大用途就是用来连接终端。<br />这些串行端口所对应的设备名称是/dev/tts/0(或/dev/ttyS0), /dev/tts/1(或/dev/ttyS1)等，设备号分别是(4,0), (4,1)等，分别对应于DOS系统下的COM1、COM2等。</p>\r\n<p>若要向一个端口发送数据，可以在命令行上把标准输出重定向到这些特殊文件名上即可！！！！<br />例如，在命令行提示符下键入：echo test &gt; /dev/ttyS1会把单词&rdquo;test&rdquo;发送到连接在ttyS1(COM2)端口的设备上。可接串口来实验。</p>\r\n<p><br />2、伪终端(/dev/pty/)<br />伪终端(Pseudo Terminal)是成对的逻辑终端设备(即master和slave设备, 对master的操作会反映到slave上)。&nbsp;<br />例如/dev/ptyp3和/dev/ttyp3(或者在设备文件系统中分别是/dev/pty/m3和/dev/pty/s3)，它们与实际物理设备并不直接相关！！！!!</p>\r\n<p>如果一个程序把ptyp3(master设备)看作是一个串行端口设备，则它对该端口的读/写操作会反映在该逻辑终端设备对应的另一个ttyp3(slave设备)上面。<br />而ttyp3则是另一个程序用于读写操作的逻辑设备。</p>\r\n<p>这样，两个程序就可以通过这种逻辑设备进行互相交流，而其中一个使用ttyp3的程序则认为自己正在与一个串行端口进行通信。这很象是逻辑设备对之间的管道操作。对于ttyp3(s3)，任何设计成使用一个串行端口设备的程序都可以使用该逻辑设备。但对于使用ptyp3的程序，则需要专门设计来使用 ptyp3(m3)逻辑设备。</p>\r\n<p>例如，如果某人在网上使用telnet程序连接到你的计算机上，则telnet程序就可能会开始连接到设备 ptyp2(m2)上(一个伪终端端口上)。<br />此时一个getty程序就应该运行在对应的ttyp2(s2)端口上。<br />当telnet从远端获取了一个字符时，该字符就会通过m2、s2传递给getty程序，而getty程序就会通过s2、m2和telnet程序往网络上返回&rdquo;login:&rdquo;字符串信息。<br />这样，登录程序与telnet程序就通过&ldquo;伪终端&rdquo;进行通信。通过使用适当的软件，就可以把两个甚至多个伪终端设备连接到同一个物理串行端口上。</p>\r\n<p>&nbsp;</p>\r\n<p>在使用设备文件系统 (device filesystem)之前，为了得到大量的伪终端设备特殊文件，使用了比较复杂的文件名命名方式。因为只存在16个ttyp(ttyp0&mdash;ttypf) 的设备文件，为了得到更多的逻辑设备对，就使用了象q、r、s等字符来代替p。</p>\r\n<p>例如，ttys8和ptys8就是一个伪终端设备对。<br />不过这种命名方式目前仍然在RedHat等Linux系统中使用着。&nbsp;<br />但Linux系统上的Unix98并不使用上述方法，而使用了&rdquo;pty master&rdquo;方式，例如/dev/ptm3。它的对应端则会被自动地创建成/dev/pts/3。这样就可以在需要时提供一个pty伪终端。</p>\r\n<p>目录 /dev/pts是一个类型为devpts的文件系统，并且可以在被加载文件系统列表中看到。虽然&ldquo;文件&rdquo;/dev/pts/3看上去是设备文件系统中的一项，但其实它完全是一种不同的文件系统。&nbsp;<br />即: TELNET &mdash;&gt; TTYP3(S3: slave) &mdash;&gt; PTYP3(M3: master) &mdash;&gt; GETTY</p>\r\n<p>&nbsp;</p>\r\n<p>3、控制终端(/dev/tty)<br />如果当前进程有控制终端(Controlling Terminal)的话，那么/dev/tty就是当前进程的控制终端的设备特殊文件。可以使用命令&rdquo;ps -ax&rdquo;来查看进程与哪个控制终端相连。<br />对于你登录的shell，/dev/tty就是你使用的终端，设备号是(5,0)。使用命令&rdquo;tty&rdquo;可以查看它具体对应哪个实际终端设备。/dev/tty有些类似于到实际所使用终端设备的一个联接。</p>\r\n<p>&nbsp;</p>\r\n<p>4、控制台终端(/dev/ttyn, /dev/console)<br />在Linux 系统中，计算机显示器通常被称为控制台终端 (Console)！！！！</p>\r\n<p>它仿真了类型为Linux的一种终端(TERM=Linux)，并且有一些设备特殊文件与之相关联：tty0、tty1、tty2 等。</p>\r\n<p>当你在控制台上登录时，使用的是tty1。使用Alt+[F1&mdash;F6]组合键时，我们就可以切换到tty2、tty3等上面去。<br />tty1&ndash;tty6等称为虚拟终端，而tty0则是当前所使用虚拟终端的一个别名，系统所产生的信息会发送到该终端上。<br />因此不管当前正在使用哪个虚拟终端，系统信息都会发送到控制台终端上。你可以登录到不同的虚拟终端上去，因而可以让系统同时有几个不同的会话存在。只有系统或超级用户root可以向 /dev/tty0进行写操作 即下例：</p>\r\n<p><br />（1）# tty(查看当前TTY)&nbsp;<br />/dev/tty1&nbsp;<br />（2）#echo &ldquo;test tty0&rdquo; &gt; /dev/tty0&nbsp;<br />test tty0</p>\r\n<p>5 虚拟终端(/dev/pts/n)<br />在Xwindows模式下的伪终端.</p>\r\n<p><br />6 其它类型<br />Linux系统中还针对很多不同的字符设备存在有很多其它种类的终端设备特殊文件。例如针对ISDN设备的/dev/ttyIn终端设备等。</p>', '1', 'linux、终端命令', '10');
INSERT INTO `article` VALUES ('51b9697b-16cf-43a5-be06-b624b809a314', '1', '12jlk', '2018-07-11 18:43:08', '<p><span style=\"background-color: #ffffff; color: #808000;\">plugins: [</span><br /><span style=\"background-color: #ffffff; color: #808000;\">&nbsp; &nbsp; \'advlist autolink autosave lists link image charmap print preview anchor\',</span><br /><span style=\"background-color: #ffffff; color: #808000;\">&nbsp; &nbsp;\'searchreplace visualblocks code fullscreen textcolor colorpicker textpattern code uploadimage\',</span><br /><span style=\"background-color: #ffffff; color: #808000;\">&nbsp; &nbsp;\'contextmenu paste\'</span><br /><span style=\"background-color: #ffffff; color: #808000;\">],</span></p>\r\n<p><span style=\"background-color: #ffffff; color: #808000;\"><img style=\"display: block; margin-left: auto; margin-right: auto;\" src=\"uploadImg/22c0a9d7-084d-447c-b246-7520af5c06a3_ajax.png\" width=\"545\" height=\"293\" /></span></p>', '1', '爬虫', '10');
INSERT INTO `article` VALUES ('53293038-a72d-46c9-98d7-52354135a12e', '1', 'dfwetrufgwsaaaaa', '2018-07-09 10:44:29', '<p>Hello, World!</p>', '1', 'fyfth', '5');
INSERT INTO `article` VALUES ('5865f848-76e0-4022-b2f0-bb85f410881c', '1', '世界杯变欧洲杯', '2018-07-07 20:21:29', '<p>随着法国在8强战中淘汰乌拉圭，巴西也被比利时人成功掀翻后，目前还留在本届世界杯上的6支球队，全部来自欧洲，自此俄罗斯世界杯正式切换到欧洲杯时间。</p>', '5', '世界杯，欧洲杯', '1');
INSERT INTO `article` VALUES ('871da623-5d19-4376-94f6-78c8dcaae4b9', '1', 'ajax', '2018-07-11 10:35:18', '<p style=\"text-align: center;\"><span style=\"font-size: 18pt;\">AJAX的使用</span></p>\r\n<p style=\"text-align: left;\">ajax使用介绍：</p>\r\n<p style=\"text-align: left;\"><br /><img style=\"float: left;\" src=\"uploadImg/0adc21f4-5bd6-411b-95fd-1f3fc220f0d2_ajax.png\" width=\"339\" height=\"182\" /></p>', '1', 'ajax', '4');
INSERT INTO `article` VALUES ('8aa443f2-c216-4053-a5f7-94dfe146de5e', '1', '测试图片', '2018-07-08 13:19:28', '<p>Hello, World!<img src=\"uploadImg/85fac656-7015-4635-8e31-34bc9de71df8_gakki2.jpg\" /></p>', '1', '测试', '9');
INSERT INTO `article` VALUES ('9231ac52-832c-4c8d-81db-0f495e17ba1a', '1', 'java学习之路', '2018-07-08 13:16:05', '<p style=\"text-align: center;\">Hello, World!</p>\r\n<p style=\"text-align: left;\">java</p>', '1', '坚持', '13');
INSERT INTO `article` VALUES ('d6d3885c-f701-4c4b-898c-2e5f2c0641e5', '1', '微信支付被曝漏洞', '2018-07-10 16:24:11', '<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;7月3日，据白帽汇安全研究院的消息，有网友在国外的安全社区公布了微信支付官方SDK（软件工具开发包）存在的严重漏洞，此漏洞可导致商家服务器被入侵，一旦攻击者获得商家的关键安全密钥（md5-key和merchant-Id等），他就可以通过发送伪造信息来欺骗商家而无需付费购买任何东西。</p>\r\n<p><span class=\"bjh-p\">值得注意的是，目前漏洞的详细信息以及攻击方式已被公开，安全人员建议使用JAVA语言SDK（软件开发工具包）开发微信支付功能的商户，快速检查并修复。（此处解释一下，微信官方发布了自己的微信支付开发包，许多开发人员选择使用官方最新版本，一般来讲，SDK是按照编程语言区分，如果网站使用的是同一种语言，那么其开发使用的也就是对应种语言。但也有特殊情况，就是不使用官方的开发包，而使用开源的或自行开发的，这样相对较少。）</span></p>\r\n<p><span class=\"bjh-p\">那么，微信支付的官方SDK究竟谁会用？范围多大？为什么黑客选择陌陌和vivo开刀？商家和用户会受到哪些影响？知道这个漏洞的黑客为什么不自己&ldquo;闷声发大财&rdquo;，而要选择将攻击方式公开？</span></p>\r\n<p><span class=\"bjh-p\">谁会用到微信支付的SDK</span></p>\r\n<p><span class=\"bjh-p\">文章开头提到，这个漏洞是关于微信支付的官方SDK的，那究竟谁会用到此类SDK呢？</span></p>\r\n<p><span class=\"bjh-p\">白帽汇安全总监&ldquo;BaCde&rdquo;?告诉雷锋网(公众号：雷锋网)，所有需要开通微信支付的商家都很有可能用到！</span></p>\r\n<p><span class=\"bjh-p\">比如，我们平时使用微信支付的时候，都会有一个付款的二维码，或者网购的时候，也有微信的支付渠道。这就需要商家与微信支付建立一个专属通道。以你去买面包为例，在你扫码的瞬间，微信支付和商家的对话是这样的：</span></p>\r\n<p><span class=\"bjh-p\">微信支付：你是哪家店？</span></p>\r\n<p><span class=\"bjh-p\">面包店：我是某某面包店，我的代号是***</span></p>\r\n<p><span class=\"bjh-p\">微信支付：订单是你生成的吗？</span></p>\r\n<p><span class=\"bjh-p\">面包店：是的。</span></p>\r\n<p><span class=\"bjh-p\">微信支付：我收到了50块，钱数对吗？</span></p>\r\n<p><span class=\"bjh-p\">面包店：对的。</span></p>\r\n<p><span class=\"bjh-p\">微信支付：对的话你们订单系统赶紧处理一下，人家付款成功了。</span></p>\r\n<p><span class=\"bjh-p\">面包店：好的，这就处理。</span></p>\r\n<p><span class=\"bjh-p\">这个过程叫&ldquo;商户回调接口&rdquo;，也就是说，所有的商户要想开通微信支付，不管是线上还是线下的，都需要通过与微信支付的这个接口来交流，这个接口有一套标准的定义，比如订单号、用户信息、价格等，最后有一个签名来保证双方交易的真实可靠。</span></p>\r\n<p><span class=\"bjh-p\">这时，微信官方为了方便商户，一般都会有一个官方的SDK，来使得各家商户更加顺畅和安全地接入微信支付，这时，这个SDK开发包就存在了这些商户的服务器上，与此同时，开发包的漏洞也就直接影响了商户服务器的安全性。</span></p>\r\n<p><span class=\"bjh-p\">如果有一天，黑客利用SDK上面的漏洞控制了商家的服务器，那么这些订单状态、用户信息和价格等就很有可能被黑客拿走并且进行篡改。</span></p>\r\n<p><span class=\"bjh-p\">据BaCde透露，由于微信官方的SDK有问题，目前所有使用基于微信支付JAVA?SDK开发的微信支付功能都可能受影响。</span></p>\r\n<p><span class=\"bjh-p\">那黑客为什么选择陌陌和vivo来开刀呢？听起来，这两家一个是手机厂商，一个是社交软件，和我们平时刷二维码或者网购的某某商家还是有区别。</span></p>\r\n<p><span class=\"bjh-p\">BaCde解释，vivo这个可能是vivo的在线商城，比如黑客可以用微信支付不花一分钱来买走在线商城的东西。而对于陌陌中招，则有可能是因为它可以通过微信支付进行会员充值，也有漏洞可以利用。</span></p>\r\n<p><span class=\"bjh-p\">所以，也许这名攻击者是经常用vivo手机的单身狗？</span></p>\r\n<p><span class=\"bjh-p\">商户、用户和黑客</span></p>\r\n<p><span class=\"bjh-p\">如果你是一名商户，会有哪些影响？</span></p>\r\n<p><span class=\"bjh-p\">以在线商城的商户为例，如果你所应用的语言是JAVA（目前漏洞针对的是JAVA），接入微信支付功能的第一步，首先要在微信的官方网站找到JAVA语言的SDK开发包，当开发人员编写不规范而开发出有漏洞的微信支付功能，黑客发现后，就可通过窃取商户信息，进而伪造网络请求进行0元购买商品的操作，以及获取数据信息。</span></p>\r\n<p><span class=\"bjh-p\">这里要强调一下，虽然这里的开发人员是商户的开发人员，但其根本原因还是由于微信支付的SDK在某处存在安全问题，所以要解决漏洞，还得从官方的SDK来解决。</span></p>\r\n<p><span class=\"bjh-p\">如果我是普通的用户呢？</span></p>\r\n<p><span class=\"bjh-p\">最直接的影响就是，你在商家后台的用户信息已经被暴露了，而黑客拿到这些信息可以去暗网上兜售。紧接着，你成为了垃圾信息的受害者。</span></p>\r\n<p><span class=\"bjh-p\">而对于黑客来说，通过这个漏洞，不仅可以0元买买买，还可以通过倒卖用户信息小赚一笔。</span></p>\r\n<p><span class=\"bjh-p\">漏洞影响</span></p>\r\n<p><span class=\"bjh-p\">雷锋网发现，目前，陌陌和vivo已经修复了相关的漏洞，但针对此漏洞，微信官方并未发布相关安全公告，也没有更新微信支付的SDK版本。</span></p>\r\n<p><span class=\"bjh-p\">也就是说，所有使用微信支付官方SDK的商户，并且语言是JAVA的，都还处于被攻击的危险之中。</span></p>\r\n<p><span class=\"bjh-p\">那既然微信官方都没修复，陌陌和vivo是怎么修复的？</span></p>\r\n<p><span class=\"bjh-p\">BaCde解释，陌陌和vivo本身有相应的安全能力，可以修改SDK的相应代码进行修复，自行解决。但如果是一些小的商户，就没有这个能力了。</span></p>\r\n<p><span class=\"bjh-p\">据悉，虽然目前该漏洞影响的是JAVA版本的SDK，但历史上已经出现过PHP版本的SDK存在同样的漏洞。据BaCde透露，这次的漏洞是XML外部实体注入漏洞，即当允许引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害。</span></p>\r\n<p><span class=\"bjh-p\">对于攻击者来说，这么好的赚钱机会，闷声发大财就好了，为什么要选择公开攻击方式？</span></p>\r\n<p><span class=\"bjh-p\">据白帽汇创始人赵武推测，直接公开这种级别的大杀器确实太不寻常，他这样做的原因，不排除是黑客在利用漏洞的过程中发现痕迹擦不干净，有可能被查出来，所以马上对外公布，让广大黑客群体发起攻击，以便淹没自己最初的攻击，达到隐藏自己的效果。</span></p>', '4', '微信、安全、支付', '3');
INSERT INTO `article` VALUES ('e246c862-4631-4316-b354-a78a68cde782', '1', 'python网络编程基础', '2018-07-10 10:52:59', '<p>目录</p>\r\n<p>tcp和udp</p>\r\n<h3 id=\"udp\">1、udp</h3>\r\n<p>tcp、udp是第四层传输层拥有的协议，用于在完成寻址功能后的数据传输。传输层将路由交换层和应用数据层划分开，主要提供数据传输控制。<br />udp的使用是面向无连接的，即协议自身的设计是不保证数据的有序性和重传的，这样的缺点是丢包率增加，并且无法有序的接收数据。不过这两个缺点都可以通过应用层来弥补。而udp的优点是报头小、数据传输效率高（不需要确认、协商各种流控制等等），所以udp更适用于数据需要快速传输，并对数据完整性并不太高的场景。比如：视频直播，要求实时传输，而且可以接受部分的丢帧。<br />udp报头非常的简单，核心只有端口+校验和</p>\r\n<h3 id=\"tcp\">2、tcp</h3>\r\n<p>tcp的使用是面向连接的，即数据的传输必须基于虚链路的完整建立。虚链路的建立提供了很多优秀的功能，比如确认重传以保证数据的完整性，滑动窗口以保证数据传输的高效性，各类选项字段提供不同的可选功能。tcp的缺点是报头大，因为需要包含比udp更多的功能字段，而且tcp数据的每次发送都必须得到确认否则将会重传。tcp一般应用于对数据完整性要求很高的场景。比如：ssh。<br />tcp的报头字段比较多，核心有：seq和ack用于处理确认重传、SYN/FIN/RST等用于提供数据包身份标记、窗口用于处理流量控制、还有各种选项。</p>\r\n<h3 id=\"socket函数\">3、socket函数</h3>\r\n<p>为了将路由交换和应用层分离开，socket提供了一个统一的接口供应用层直接调用而无需考虑底层路由交换的通信问题。<br />所有的操作系统都提供socket调用，python的socket模块也是对底层socket模块的封装，并提供了方便使用的一些函数接口。</p>\r\n<h4 id=\"建立对象\">1、建立对象</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># 实例化一个socket对象，用于处理本地的socket事务，不论是服务器还是客户端都一样</span>\r\n<span class=\"hljs-comment\"># socket模块提供了很多不同类型的socket，这里选择tcp，使用ipv4</span>\r\n\r\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</code></pre>\r\n<h4 id=\"bind\">2、bind</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># socket对象可以绑定本地的ip和端口号，这个函数在服务器和客户端均可使用，不过一般不会绑定客户端</span>\r\n<span class=\"hljs-comment\"># 客户端的ip和端口一般使用随机。</span>\r\n<span class=\"hljs-comment\"># 服务器一般会固定ip和端口以供大量客户端连接</span>\r\n<span class=\"hljs-comment\"># 服务器提供的ip会通过dns发布域名</span>\r\n<span class=\"hljs-comment\"># bind的参数是一个ip+port的元组，如果没有提供ip，则会监听本机所有对外接口ip</span>\r\n\r\nsock.bind((<span class=\"hljs-string\">\'127.0.0.1\'</span>, <span class=\"hljs-number\">8080</span>))</code></pre>\r\n<h4 id=\"listen\">3、listen</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># 此函数只应该用于服务器，因为服务器才需要监听端口等待客户主动连接</span>\r\n<span class=\"hljs-comment\"># 此函数将会告知操作系统监听socket连接</span>\r\n<span class=\"hljs-comment\"># 此函数的底层操作应该就是完成tcp三次握手</span>\r\n<span class=\"hljs-comment\"># 此函数的5表示已经完成三次握手的客户端最大数量，但是这些客户端还未与服务器交互数据</span>\r\n\r\nsock.listen(<span class=\"hljs-number\">5</span>)</code></pre>\r\n<h4 id=\"connect\">4、connect</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># 此函数只应该用于客户端，因为客户端才需要连接服务器的端口</span>\r\n<span class=\"hljs-comment\"># 此函数一旦启动，则会在客户端上随机选取本地端口</span>\r\n<span class=\"hljs-comment\"># 此函数的语义是发起tcp三次握手</span>\r\n\r\nsock.connect((<span class=\"hljs-string\">\'127.0.0.1\'</span>, <span class=\"hljs-number\">8080</span>))</code></pre>\r\n<h4 id=\"accept\">5、accept</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># 此函数应该用于服务器，当tcp三次握手完成之后，服务器通过此函数获取此客户端socket对象和地址。</span>\r\n<span class=\"hljs-comment\"># 此函数是一个阻塞函数，即，如果服务器没有任何虚链路完成，将会无限阻塞，直到有一个虚链路通过</span>\r\n<span class=\"hljs-comment\"># listen完成，accept才会返回。</span>\r\n<span class=\"hljs-comment\"># 如果要服务器提供无限接收客户端的功能，应该循环此函数以提供链路循环</span>\r\n\r\nconn, addr = sock.accept()</code></pre>\r\n<h4 id=\"recv\">6、recv</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># 此函数用于从一个socket对象（管道）中获取数据，而实际上，是从操作系统的网卡缓存中获取数据</span>\r\n<span class=\"hljs-comment\"># 可以指定需要一次获取的字节数，获取得到的数据是bytes类型，需要decode才方便阅读</span>\r\n<span class=\"hljs-comment\"># 此函数是一个阻塞函数，即，如果网卡缓存没有任何数据，则会一直阻塞到数据到达为止</span>\r\n\r\nmsg = conn.recv()</code></pre>\r\n<h4 id=\"send\">7、send</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># 此函数用于将bytes类型的数据发送给socket对象（管道），而实际上，是发送给网卡缓存，后续交由</span>\r\n<span class=\"hljs-comment\"># 操作系统真正的发送数据。</span>\r\n<span class=\"hljs-comment\"># 此函数非阻塞，可以直接返回，不过要特别注意的是，msg如果为空，此函数可以正确执行，但是实际上</span>\r\n<span class=\"hljs-comment\"># 操作系统是没有发送数据给对端的。这样会产生一些socket连接的问题，所以要杜绝发空。</span>\r\n\r\nconn.send(msg)</code></pre>\r\n<h4 id=\"close\">8、close</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># 关闭虚链路</span>\r\n\r\nconn.close()</code></pre>\r\n<h4 id=\"getpeername\">9、getpeername</h4>\r\n<pre class=\"python\"><code class=\"hljs\"><span class=\"hljs-comment\"># 获取一个虚链路对端的地址二元组</span>\r\n\r\nprint(sock.getpeername())</code></pre>\r\n<h3 id=\"粘包问题\">4、粘包问题</h3>\r\n<p>根本原因：tcp面向流，无法区分消息之间的数据边界，固定recv就会导致消息粘包<br />解决思路：每次recv的时候动态获取，并准确的获取一个消息的长度<br />解决办法：每一个消息都增加固定长度的报头。每次recv的时候先获取固定长度的报头，从报头中获取本次消息的准确长度，然后再recv完整准确的信息。</p>', '1', 'python、编程、基础', '9');
INSERT INTO `article` VALUES ('e9464bff-d29d-4c34-a317-9fb2e09a67e8', '1', 'gfjhghjfraaa', '2018-07-09 10:44:19', '<p>Hello, World!fdsg</p>', '1', 'dfg', '0');
INSERT INTO `article` VALUES ('vsadgdfgdghgfjgyytsdf', '1', 'nov的博客诞生', '2018-07-05 10:46:01', '', '4', '博客 nov', '3');

-- ----------------------------
-- Table structure for `articletype`
-- ----------------------------
DROP TABLE IF EXISTS `articletype`;
CREATE TABLE `articletype` (
  `typeId` int(11) NOT NULL AUTO_INCREMENT,
  `typeName` varchar(20) NOT NULL,
  `info` varchar(255) DEFAULT NULL,
  `author_id` int(11) DEFAULT NULL,
  PRIMARY KEY (`typeId`),
  KEY `author_id` (`author_id`),
  CONSTRAINT `articletype_ibfk_1` FOREIGN KEY (`author_id`) REFERENCES `author` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of articletype
-- ----------------------------
INSERT INTO `articletype` VALUES ('1', '技术文章', '技术分享', '1');
INSERT INTO `articletype` VALUES ('2', '美食娱乐', '生活中的美食和娱乐', '1');
INSERT INTO `articletype` VALUES ('4', '重大事件', '记录大事件', '1');
INSERT INTO `articletype` VALUES ('5', '生活记趣', '生活中有趣的事', '1');
INSERT INTO `articletype` VALUES ('6', '家乡见闻', '家乡的所见所闻', '1');
INSERT INTO `articletype` VALUES ('7', '体育运动', '讲述自己眼中的体育', '1');

-- ----------------------------
-- Table structure for `author`
-- ----------------------------
DROP TABLE IF EXISTS `author`;
CREATE TABLE `author` (
  `id` int(11) NOT NULL,
  `gender` int(11) DEFAULT NULL,
  `birthday` datetime DEFAULT NULL,
  `username` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `introduction` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of author
-- ----------------------------
INSERT INTO `author` VALUES ('1', '1', '1995-11-25 00:00:00', 'nov', 'de7d6f6aad0b8375957fbd2092272db1', '孤独是上帝在提示你，该充实自己了！');
INSERT INTO `author` VALUES ('2', '1', '2014-07-01 10:33:13', 'ranter', '202cb962ac59075b964b07152d234b70', null);

-- ----------------------------
-- Table structure for `comment`
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment` (
  `id` varchar(64) NOT NULL,
  `author_id` int(11) DEFAULT NULL,
  `visitor_username` varchar(255) DEFAULT NULL,
  `visitor_email` varchar(255) DEFAULT NULL,
  `article_id` varchar(64) DEFAULT NULL,
  `content` varchar(255) DEFAULT NULL,
  `createTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `visitor_email` (`visitor_email`),
  KEY `article_id` (`article_id`),
  KEY `author_id` (`author_id`),
  CONSTRAINT `comment_ibfk_1` FOREIGN KEY (`visitor_email`) REFERENCES `visitor` (`email`),
  CONSTRAINT `comment_ibfk_2` FOREIGN KEY (`article_id`) REFERENCES `article` (`id`),
  CONSTRAINT `comment_ibfk_3` FOREIGN KEY (`author_id`) REFERENCES `author` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES ('09c98125-f356-4cad-a32d-9e201b87a5cb', '1', '嘻嘻', '354597202@qq.com', '2a9e5b26-689e-4a7a-8777-63c83ef69a4e', '测试评论', '2018-07-10 10:21:35');
INSERT INTO `comment` VALUES ('gdfhfghjfgdwsf', '1', 'test2', '2326449420@qq.com', 'vsadgdfgdghgfjgyytsdf', '我是金刚腿', '2018-07-07 21:01:16');
INSERT INTO `comment` VALUES ('gfdhfghsdfg', '1', 'test1', '3350119784@qq.com', 'vsadgdfgdghgfjgyytsdf', '那是真的好', '2018-07-04 21:00:43');
INSERT INTO `comment` VALUES ('sdfgdfhgsdfg', '1', '嘻嘻', '354597202@qq.com', 'vsadgdfgdghgfjgyytsdf', '少林功夫好耶', '2018-07-05 20:59:31');

-- ----------------------------
-- Table structure for `visitor`
-- ----------------------------
DROP TABLE IF EXISTS `visitor`;
CREATE TABLE `visitor` (
  `email` varchar(255) NOT NULL,
  `username` varchar(255) NOT NULL,
  PRIMARY KEY (`email`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of visitor
-- ----------------------------
INSERT INTO `visitor` VALUES ('2326449420@qq.com', 'test2');
INSERT INTO `visitor` VALUES ('3350119784@qq.com', 'test1');
INSERT INTO `visitor` VALUES ('354597202@qq.com', '嘻嘻');
